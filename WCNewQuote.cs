///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sid_FCGAProject
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The WCNewQuote recording.
    /// </summary>
    [TestModule("ba3169d9-e9fb-4d7a-90cd-1e68bd7bbdda", ModuleType.Recording, 1)]
    public partial class WCNewQuote : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sid_FCGAProject.Project_Repository.AgentRepository repository.
        /// </summary>
        public static global::Sid_FCGAProject.Project_Repository.AgentRepository repo = global::Sid_FCGAProject.Project_Repository.AgentRepository.Instance;

        static WCNewQuote instance = new WCNewQuote();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public WCNewQuote()
        {
            FEINNo = "867657567";
            Status_Reason = "New Quote";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static WCNewQuote Instance
        {
            get { return instance; }
        }

#region Variables

        string _FEINNo;

        /// <summary>
        /// Gets or sets the value of variable FEINNo.
        /// </summary>
        [TestVariable("c4d49a25-4bf4-44b9-927e-e0e131d954bc")]
        public string FEINNo
        {
            get { return _FEINNo; }
            set { _FEINNo = value; }
        }

        string _Status_Reason;

        /// <summary>
        /// Gets or sets the value of variable Status_Reason.
        /// </summary>
        [TestVariable("f67854b6-0c9f-4901-8826-6e865bb7db66")]
        public string Status_Reason
        {
            get { return _Status_Reason; }
            set { _Status_Reason = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(0));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'New_Quote.NewQuoteTab'.", repo.New_Quote.NewQuoteTabInfo, new RecordItemIndex(1));
            repo.New_Quote.NewQuoteTab.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'New_Quote.LOB_WorkersCompensation'.", repo.New_Quote.LOB_WorkersCompensationInfo, new RecordItemIndex(2));
            repo.New_Quote.LOB_WorkersCompensation.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(3));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FEINNo' with focus on 'New_Quote.WC_TxtFEIN'.", repo.New_Quote.WC_TxtFEINInfo, new RecordItemIndex(4));
            repo.New_Quote.WC_TxtFEIN.PressKeys(FEINNo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'New_Quote.Page_Continue' at Center.", repo.New_Quote.Page_ContinueInfo, new RecordItemIndex(5));
            repo.New_Quote.Page_Continue.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
