///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sid_FCGAProject.GL_Product
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The GL_UW_EnterRiskLevel recording.
    /// </summary>
    [TestModule("e1dc6a4d-b6cf-425c-96ae-c62c657c7505", ModuleType.Recording, 1)]
    public partial class GL_UW_EnterRiskLevel : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repository.
        /// </summary>
        public static global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repo = global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository.Instance;

        static GL_UW_EnterRiskLevel instance = new GL_UW_EnterRiskLevel();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public GL_UW_EnterRiskLevel()
        {
            GLUWState = "FLorida";
            GLUWCounty = "Bradford";
            GLUWBusinessName = "AUTM FCGA-3645653";
            GLUWDescription = "OK";
            GLUWBusinessYear = "2";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static GL_UW_EnterRiskLevel Instance
        {
            get { return instance; }
        }

#region Variables

        string _GLUWState;

        /// <summary>
        /// Gets or sets the value of variable GLUWState.
        /// </summary>
        [TestVariable("ad3307e5-47d0-41f4-9a6f-ec808ed60141")]
        public string GLUWState
        {
            get { return _GLUWState; }
            set { _GLUWState = value; }
        }

        string _GLUWCounty;

        /// <summary>
        /// Gets or sets the value of variable GLUWCounty.
        /// </summary>
        [TestVariable("ab7ebdbc-3d65-4bd8-b42d-a240a7569463")]
        public string GLUWCounty
        {
            get { return _GLUWCounty; }
            set { _GLUWCounty = value; }
        }

        string _GLUWBusinessName;

        /// <summary>
        /// Gets or sets the value of variable GLUWBusinessName.
        /// </summary>
        [TestVariable("abd97f50-678d-4ae9-8677-647af8d8e59e")]
        public string GLUWBusinessName
        {
            get { return _GLUWBusinessName; }
            set { _GLUWBusinessName = value; }
        }

        string _GLUWDescription;

        /// <summary>
        /// Gets or sets the value of variable GLUWDescription.
        /// </summary>
        [TestVariable("1eb10c16-243b-4301-a248-d889a4b7a759")]
        public string GLUWDescription
        {
            get { return _GLUWDescription; }
            set { _GLUWDescription = value; }
        }

        string _GLUWBusinessYear;

        /// <summary>
        /// Gets or sets the value of variable GLUWBusinessYear.
        /// </summary>
        [TestVariable("489c5827-6c09-4af3-a110-886110a1feef")]
        public string GLUWBusinessYear
        {
            get { return _GLUWBusinessYear; }
            set { _GLUWBusinessYear = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SelectGLState' at Center.", repo.ApplicationUnderTest.SelectGLStateInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.SelectGLState.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Search' at Center.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.Search.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$GLUWState' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.Search.PressKeys(GLUWState);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.Search.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SelectGLCounty' at Center.", repo.ApplicationUnderTest.SelectGLCountyInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.SelectGLCounty.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$GLUWCounty' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.Search.EnsureVisible();
            Keyboard.Press(GLUWCounty);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.Search.EnsureVisible();
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtNameOfInsured' at Center.", repo.ApplicationUnderTest.TxtNameOfInsuredInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.TxtNameOfInsured.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$GLUWBusinessName' on item 'ApplicationUnderTest.TxtNameOfInsured'.", repo.ApplicationUnderTest.TxtNameOfInsuredInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.TxtNameOfInsured.Element.SetAttributeValue("Value", GLUWBusinessName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtDescriptionOfBusiness' at Center.", repo.ApplicationUnderTest.TxtDescriptionOfBusinessInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.TxtDescriptionOfBusiness.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute InnerText to '$GLUWDescription' on item 'ApplicationUnderTest.TxtDescriptionOfBusiness'.", repo.ApplicationUnderTest.TxtDescriptionOfBusinessInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.TxtDescriptionOfBusiness.Element.SetAttributeValue("InnerText", GLUWDescription);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$GLUWDescription' with focus on 'ApplicationUnderTest.TxtDescriptionOfBusiness'.", repo.ApplicationUnderTest.TxtDescriptionOfBusinessInfo, new RecordItemIndex(11));
            //repo.ApplicationUnderTest.TxtDescriptionOfBusiness.PressKeys(GLUWDescription);
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtYearsInBusiness' at Center.", repo.ApplicationUnderTest.TxtYearsInBusinessInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.TxtYearsInBusiness.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$GLUWBusinessYear' on item 'ApplicationUnderTest.TxtYearsInBusiness'.", repo.ApplicationUnderTest.TxtYearsInBusinessInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.TxtYearsInBusiness.Element.SetAttributeValue("Value", GLUWBusinessYear);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
