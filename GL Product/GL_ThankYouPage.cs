///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sid_FCGAProject.GL_Product
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The GL_ThankYouPage recording.
    /// </summary>
    [TestModule("d285f9ef-7836-449b-a095-5deefc936dc3", ModuleType.Recording, 1)]
    public partial class GL_ThankYouPage : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repository.
        /// </summary>
        public static global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repo = global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository.Instance;

        static GL_ThankYouPage instance = new GL_ThankYouPage();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public GL_ThankYouPage()
        {
            InsuredName = "AUTM";
            GLPolicyNumber = "0";
            ExPolicyNumber = "0";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static GL_ThankYouPage Instance
        {
            get { return instance; }
        }

#region Variables

        string _InsuredName;

        /// <summary>
        /// Gets or sets the value of variable InsuredName.
        /// </summary>
        [TestVariable("7168927d-ae86-48af-98b2-1c5b4c4fbd35")]
        public string InsuredName
        {
            get { return _InsuredName; }
            set { _InsuredName = value; }
        }

        string _GLPolicyNumber;

        /// <summary>
        /// Gets or sets the value of variable GLPolicyNumber.
        /// </summary>
        [TestVariable("139be3bb-8f61-4625-9ceb-8206eadaf1f8")]
        public string GLPolicyNumber
        {
            get { return _GLPolicyNumber; }
            set { _GLPolicyNumber = value; }
        }

        string _ExPolicyNumber;

        /// <summary>
        /// Gets or sets the value of variable ExPolicyNumber.
        /// </summary>
        [TestVariable("91a2697b-1e79-454a-825e-c8621129321c")]
        public string ExPolicyNumber
        {
            get { return _ExPolicyNumber; }
            set { _ExPolicyNumber = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(0));
            Delay.Duration(10000, false);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LblCompanyName' at Center.", repo.ApplicationUnderTest.LblCompanyNameInfo, new RecordItemIndex(1));
            //repo.ApplicationUnderTest.LblCompanyName.Click();
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'ApplicationUnderTest.LblCompanyName'.", repo.ApplicationUnderTest.LblCompanyNameInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.LblCompanyName.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.LblCompanyName' and assigning its value to variable 'InsuredName'.", repo.ApplicationUnderTest.LblCompanyNameInfo, new RecordItemIndex(3));
            InsuredName = repo.ApplicationUnderTest.LblCompanyName.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LblNumber' at Center.", repo.ApplicationUnderTest.LblNumberInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.LblNumber.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.LblNumber' and assigning its value to variable 'GLPolicyNumber'.", repo.ApplicationUnderTest.LblNumberInfo, new RecordItemIndex(5));
            GLPolicyNumber = repo.ApplicationUnderTest.LblNumber.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LblxsNumber' at Center.", repo.ApplicationUnderTest.LblxsNumberInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.LblxsNumber.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.LblxsNumber' and assigning its value to variable 'ExPolicyNumber'.", repo.ApplicationUnderTest.LblxsNumberInfo, new RecordItemIndex(7));
            ExPolicyNumber = repo.ApplicationUnderTest.LblxsNumber.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LnkDownloadEvidence' at Center.", repo.ApplicationUnderTest.LnkDownloadEvidenceInfo, new RecordItemIndex(8));
            //repo.ApplicationUnderTest.LnkDownloadEvidence.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(9));
            //Delay.Duration(10000, false);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EvidencePage' at Center.", repo.ApplicationUnderTest.EvidencePageInfo, new RecordItemIndex(10));
            //repo.ApplicationUnderTest.EvidencePage.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HttpsQawinstonFwcinsComFWCPortalP.Close3' at Center.", repo.HttpsQawinstonFwcinsComFWCPortalP.Close3Info, new RecordItemIndex(11));
            //repo.HttpsQawinstonFwcinsComFWCPortalP.Close3.Click();
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.UW_PolicyDetails.PolicyDetails_OffExit' at Center.", repo.ApplicationUnderTest.UW_PolicyDetails.PolicyDetails_OffExitInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.UW_PolicyDetails.PolicyDetails_OffExit.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 8s.", new RecordItemIndex(13));
            Delay.Duration(8000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
