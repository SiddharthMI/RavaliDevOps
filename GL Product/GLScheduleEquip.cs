///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sid_FCGAProject.GL_Product
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The GLScheduleEquip recording.
    /// </summary>
    [TestModule("9f031612-b591-445f-ba4b-b244a0bf3cbf", ModuleType.Recording, 1)]
    public partial class GLScheduleEquip : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repository.
        /// </summary>
        public static global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repo = global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository.Instance;

        static GLScheduleEquip instance = new GLScheduleEquip();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public GLScheduleEquip()
        {
            AgScheduleEquipType = "CAR";
            AgScheduleAvcLimit = "12000";
            Status_Reason = "Schedule Equipiment";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static GLScheduleEquip Instance
        {
            get { return instance; }
        }

#region Variables

        string _AgScheduleEquipType;

        /// <summary>
        /// Gets or sets the value of variable AgScheduleEquipType.
        /// </summary>
        [TestVariable("7b76446f-8f6e-4367-8db2-32e21624db69")]
        public string AgScheduleEquipType
        {
            get { return _AgScheduleEquipType; }
            set { _AgScheduleEquipType = value; }
        }

        string _AgScheduleAvcLimit;

        /// <summary>
        /// Gets or sets the value of variable AgScheduleAvcLimit.
        /// </summary>
        [TestVariable("c937f924-5712-4b8f-af44-148c3506f6e2")]
        public string AgScheduleAvcLimit
        {
            get { return _AgScheduleAvcLimit; }
            set { _AgScheduleAvcLimit = value; }
        }

        string _Status_Reason;

        /// <summary>
        /// Gets or sets the value of variable Status_Reason.
        /// </summary>
        [TestVariable("0b06d654-62e9-4fcd-b83c-967e2474dbf8")]
        public string Status_Reason
        {
            get { return _Status_Reason; }
            set { _Status_Reason = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BtnAdd' at Center.", repo.ApplicationUnderTest.BtnAddInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.BtnAdd.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtType' at Center.", repo.ApplicationUnderTest.TxtTypeInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.TxtType.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AgScheduleEquipType' with focus on 'ApplicationUnderTest.TxtType'.", repo.ApplicationUnderTest.TxtTypeInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.TxtType.PressKeys(AgScheduleEquipType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtACVLimit' at Center.", repo.ApplicationUnderTest.TxtACVLimitInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.TxtACVLimit.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AgScheduleAvcLimit' with focus on 'ApplicationUnderTest.TxtACVLimit'.", repo.ApplicationUnderTest.TxtACVLimitInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.TxtACVLimit.PressKeys(AgScheduleAvcLimit);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
