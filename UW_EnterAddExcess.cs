///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sid_FCGAProject
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The UW_EnterAddExcess recording.
    /// </summary>
    [TestModule("60733c66-99f0-4d7b-9be9-d2e531d9931d", ModuleType.Recording, 1)]
    public partial class UW_EnterAddExcess : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repository.
        /// </summary>
        public static global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repo = global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository.Instance;

        static UW_EnterAddExcess instance = new UW_EnterAddExcess();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public UW_EnterAddExcess()
        {
            PolicyNo = "FGFL0023345801";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static UW_EnterAddExcess Instance
        {
            get { return instance; }
        }

#region Variables

        string _PolicyNo;

        /// <summary>
        /// Gets or sets the value of variable PolicyNo.
        /// </summary>
        [TestVariable("e71bdbc8-46c2-4874-9250-e884c98f1ece")]
        public string PolicyNo
        {
            get { return _PolicyNo; }
            set { _PolicyNo = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.UW_SelectTypes' at Center.", repo.ApplicationUnderTest.UW_SelectTypesInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.UW_SelectTypes.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddExcessPolicy' at Center.", repo.ApplicationUnderTest.AddExcessPolicyInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.AddExcessPolicy.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.UWAddExcess.AddExcess_PolicyNo' at Center.", repo.ApplicationUnderTest.UWAddExcess.AddExcess_PolicyNoInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.UWAddExcess.AddExcess_PolicyNo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PolicyNo' with focus on 'ApplicationUnderTest.UWAddExcess.AddExcess_PolicyNo'.", repo.ApplicationUnderTest.UWAddExcess.AddExcess_PolicyNoInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.UWAddExcess.AddExcess_PolicyNo.PressKeys(PolicyNo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.UWAddExcess.AddExcess_GetPolicy' at Center.", repo.ApplicationUnderTest.UWAddExcess.AddExcess_GetPolicyInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.UWAddExcess.AddExcess_GetPolicy.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(5));
            Delay.Duration(10000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
