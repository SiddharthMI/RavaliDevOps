///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sid_FCGAProject
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The GL_ClassSpecific_1 recording.
    /// </summary>
    [TestModule("f5c1f4f9-1b7f-4aa7-b0d8-54c9a8c3869a", ModuleType.Recording, 1)]
    public partial class GL_ClassSpecific_1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repository.
        /// </summary>
        public static global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repo = global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository.Instance;

        static GL_ClassSpecific_1 instance = new GL_ClassSpecific_1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public GL_ClassSpecific_1()
        {
            XYZ = "0";
            Xpath = "C:\\Automation\\FCGAInsurance-master (1)\\FCGAInsurance-master\\Frankcrum-Project-master\\Sid_FCGAProject\\AutmTestData1.xlsx";
            XsheetName = "91111";
            ClassCode_CS = "91111";
            Iteration = "1";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static GL_ClassSpecific_1 Instance
        {
            get { return instance; }
        }

#region Variables

        string _XYZ;

        /// <summary>
        /// Gets or sets the value of variable XYZ.
        /// </summary>
        [TestVariable("835e12b6-9d74-4668-9f13-3b6d07457076")]
        public string XYZ
        {
            get { return _XYZ; }
            set { _XYZ = value; }
        }

        string _Xpath;

        /// <summary>
        /// Gets or sets the value of variable Xpath.
        /// </summary>
        [TestVariable("9895610c-e66b-4e6a-9c45-48de9542dd26")]
        public string Xpath
        {
            get { return _Xpath; }
            set { _Xpath = value; }
        }

        string _XsheetName;

        /// <summary>
        /// Gets or sets the value of variable XsheetName.
        /// </summary>
        [TestVariable("8e4159e5-648d-43f2-b6a6-0e25090f30ef")]
        public string XsheetName
        {
            get { return _XsheetName; }
            set { _XsheetName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable ClassCode_CS.
        /// </summary>
        [TestVariable("16e90527-c5ea-4453-b78e-dbb29b12cadd")]
        public string ClassCode_CS
        {
            get { return repo.ClassCode_CS; }
            set { repo.ClassCode_CS = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Iteration.
        /// </summary>
        [TestVariable("1418b394-64b3-469a-9cac-8590d1a59deb")]
        public string Iteration
        {
            get { return repo.Iteration; }
            set { repo.Iteration = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            TestExcel(repo.ApplicationUnderTest.MyTable.Copy_of_Class_Specific_Q1Info, Xpath, XsheetName, ValueConverter.ArgumentFromString<int>("Iteration", Iteration));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
