///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sid_FCGAProject
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The UW_BusinessSummary recording.
    /// </summary>
    [TestModule("dd82a823-f4fb-4150-a190-ef18e1b4963d", ModuleType.Recording, 1)]
    public partial class UW_BusinessSummary : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repository.
        /// </summary>
        public static global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repo = global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository.Instance;

        static UW_BusinessSummary instance = new UW_BusinessSummary();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public UW_BusinessSummary()
        {
            UW_StateName = "Florida";
            UW_ClassDesc = "0005,0042";
            UW_BusinessInsname = "Autmfcga-222Sid";
            UW_legalEntity = "Corporation";
            UW_DBAName = "Autmfcga-321Sid";
            UW_Address1 = "Address1";
            UW_City = "Tampa";
            UW_Zipcode = "33604";
            UW_BusinessStartDate = "07/01/2021";
            EmpliabilityValue = "$100,000/$500,000/$100,000";
            UW_FirstName = "S";
            UW_LastName = "M";
            UW_OwnerPercent = "100";
            UW_Ownerstate = "florida";
            UW_Descriptions = "Full";
            UW_FTEmployee = "09,05";
            UW_PTEmployee = "08,02";
            UW_GrossPayment = "180000,23900";
            UW_AdditionalInsuredName = "Raj";
            UW_Address2 = "Address2";
            UW_ExpMod = "0.89";
            UW_InsSubcontractorAmt = "4567";
            UW_AdditionalInsuredFEINNo = "4545454545";
            EffectiveDate = "07/29/2021";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static UW_BusinessSummary Instance
        {
            get { return instance; }
        }

#region Variables

        string _UW_StateName;

        /// <summary>
        /// Gets or sets the value of variable UW_StateName.
        /// </summary>
        [TestVariable("932ec54a-ebc5-452b-a66b-a551fd8441e2")]
        public string UW_StateName
        {
            get { return _UW_StateName; }
            set { _UW_StateName = value; }
        }

        string _UW_ClassDesc;

        /// <summary>
        /// Gets or sets the value of variable UW_ClassDesc.
        /// </summary>
        [TestVariable("59593018-0f81-4e9c-b6bd-65a944c598cc")]
        public string UW_ClassDesc
        {
            get { return _UW_ClassDesc; }
            set { _UW_ClassDesc = value; }
        }

        string _UW_BusinessInsname;

        /// <summary>
        /// Gets or sets the value of variable UW_BusinessInsname.
        /// </summary>
        [TestVariable("874a82e3-f2aa-4574-9a03-0f0ef142f5f5")]
        public string UW_BusinessInsname
        {
            get { return _UW_BusinessInsname; }
            set { _UW_BusinessInsname = value; }
        }

        string _UW_legalEntity;

        /// <summary>
        /// Gets or sets the value of variable UW_legalEntity.
        /// </summary>
        [TestVariable("55174319-944b-4adb-ac62-80e4c9d842bf")]
        public string UW_legalEntity
        {
            get { return _UW_legalEntity; }
            set { _UW_legalEntity = value; }
        }

        string _UW_DBAName;

        /// <summary>
        /// Gets or sets the value of variable UW_DBAName.
        /// </summary>
        [TestVariable("6d38e1c4-86ad-4697-86dd-56f839871ac9")]
        public string UW_DBAName
        {
            get { return _UW_DBAName; }
            set { _UW_DBAName = value; }
        }

        string _UW_Address1;

        /// <summary>
        /// Gets or sets the value of variable UW_Address1.
        /// </summary>
        [TestVariable("9f83663d-2761-4a51-9364-20918c7f1813")]
        public string UW_Address1
        {
            get { return _UW_Address1; }
            set { _UW_Address1 = value; }
        }

        string _UW_City;

        /// <summary>
        /// Gets or sets the value of variable UW_City.
        /// </summary>
        [TestVariable("b5bd5141-5e7c-4484-ad71-0f42ba6a9bdb")]
        public string UW_City
        {
            get { return _UW_City; }
            set { _UW_City = value; }
        }

        string _UW_Zipcode;

        /// <summary>
        /// Gets or sets the value of variable UW_Zipcode.
        /// </summary>
        [TestVariable("40265ce8-41c9-46e7-8559-261d0f2e5f78")]
        public string UW_Zipcode
        {
            get { return _UW_Zipcode; }
            set { _UW_Zipcode = value; }
        }

        string _UW_BusinessStartDate;

        /// <summary>
        /// Gets or sets the value of variable UW_BusinessStartDate.
        /// </summary>
        [TestVariable("88524861-17d0-4f95-b9ee-37e82276770e")]
        public string UW_BusinessStartDate
        {
            get { return _UW_BusinessStartDate; }
            set { _UW_BusinessStartDate = value; }
        }

        string _EmpliabilityValue;

        /// <summary>
        /// Gets or sets the value of variable EmpliabilityValue.
        /// </summary>
        [TestVariable("1371248f-13f5-495a-be55-d291124132b0")]
        public string EmpliabilityValue
        {
            get { return _EmpliabilityValue; }
            set { _EmpliabilityValue = value; }
        }

        string _UW_FirstName;

        /// <summary>
        /// Gets or sets the value of variable UW_FirstName.
        /// </summary>
        [TestVariable("c3de860d-e2fc-4d6c-9b46-41b47771b2a5")]
        public string UW_FirstName
        {
            get { return _UW_FirstName; }
            set { _UW_FirstName = value; }
        }

        string _UW_LastName;

        /// <summary>
        /// Gets or sets the value of variable UW_LastName.
        /// </summary>
        [TestVariable("8372b528-2d6d-4220-83ed-41e863f342b0")]
        public string UW_LastName
        {
            get { return _UW_LastName; }
            set { _UW_LastName = value; }
        }

        string _UW_OwnerPercent;

        /// <summary>
        /// Gets or sets the value of variable UW_OwnerPercent.
        /// </summary>
        [TestVariable("8dec8e16-ed74-42b3-afdb-0a44043f578b")]
        public string UW_OwnerPercent
        {
            get { return _UW_OwnerPercent; }
            set { _UW_OwnerPercent = value; }
        }

        string _UW_Ownerstate;

        /// <summary>
        /// Gets or sets the value of variable UW_Ownerstate.
        /// </summary>
        [TestVariable("8a90e25f-94e9-4fc7-9c98-db08b712568c")]
        public string UW_Ownerstate
        {
            get { return _UW_Ownerstate; }
            set { _UW_Ownerstate = value; }
        }

        string _UW_Descriptions;

        /// <summary>
        /// Gets or sets the value of variable UW_Descriptions.
        /// </summary>
        [TestVariable("d9625aa7-2102-451c-90a9-b8d007eed6a4")]
        public string UW_Descriptions
        {
            get { return _UW_Descriptions; }
            set { _UW_Descriptions = value; }
        }

        string _UW_FTEmployee;

        /// <summary>
        /// Gets or sets the value of variable UW_FTEmployee.
        /// </summary>
        [TestVariable("f6dc81a9-19ff-4c6a-b9dc-5095c6e76176")]
        public string UW_FTEmployee
        {
            get { return _UW_FTEmployee; }
            set { _UW_FTEmployee = value; }
        }

        string _UW_PTEmployee;

        /// <summary>
        /// Gets or sets the value of variable UW_PTEmployee.
        /// </summary>
        [TestVariable("e6a16703-38a9-40cd-953e-7b5fe3f4cfb7")]
        public string UW_PTEmployee
        {
            get { return _UW_PTEmployee; }
            set { _UW_PTEmployee = value; }
        }

        string _UW_GrossPayment;

        /// <summary>
        /// Gets or sets the value of variable UW_GrossPayment.
        /// </summary>
        [TestVariable("cf3ffaf9-9964-4d75-b020-75331dc8c37d")]
        public string UW_GrossPayment
        {
            get { return _UW_GrossPayment; }
            set { _UW_GrossPayment = value; }
        }

        string _UW_AdditionalInsuredName;

        /// <summary>
        /// Gets or sets the value of variable UW_AdditionalInsuredName.
        /// </summary>
        [TestVariable("4c79e5cf-5ba5-46d0-b92a-d281ad81e2a5")]
        public string UW_AdditionalInsuredName
        {
            get { return _UW_AdditionalInsuredName; }
            set { _UW_AdditionalInsuredName = value; }
        }

        string _UW_Address2;

        /// <summary>
        /// Gets or sets the value of variable UW_Address2.
        /// </summary>
        [TestVariable("c4db83b0-7416-4b74-b81e-d10e8efe9ca3")]
        public string UW_Address2
        {
            get { return _UW_Address2; }
            set { _UW_Address2 = value; }
        }

        string _UW_ExpMod;

        /// <summary>
        /// Gets or sets the value of variable UW_ExpMod.
        /// </summary>
        [TestVariable("1934f482-c2b7-48c7-9ad8-c17e3940091b")]
        public string UW_ExpMod
        {
            get { return _UW_ExpMod; }
            set { _UW_ExpMod = value; }
        }

        string _UW_InsSubcontractorAmt;

        /// <summary>
        /// Gets or sets the value of variable UW_InsSubcontractorAmt.
        /// </summary>
        [TestVariable("36682373-0180-4709-9216-5246fc2fd814")]
        public string UW_InsSubcontractorAmt
        {
            get { return _UW_InsSubcontractorAmt; }
            set { _UW_InsSubcontractorAmt = value; }
        }

        string _UW_AdditionalInsuredFEINNo;

        /// <summary>
        /// Gets or sets the value of variable UW_AdditionalInsuredFEINNo.
        /// </summary>
        [TestVariable("d0d9b28c-fe39-442f-b7bc-3f4f3c10323f")]
        public string UW_AdditionalInsuredFEINNo
        {
            get { return _UW_AdditionalInsuredFEINNo; }
            set { _UW_AdditionalInsuredFEINNo = value; }
        }

        string _EffectiveDate;

        /// <summary>
        /// Gets or sets the value of variable EffectiveDate.
        /// </summary>
        [TestVariable("b8bc1cd1-e3c0-470b-b2fa-e3306ead2d95")]
        public string EffectiveDate
        {
            get { return _EffectiveDate; }
            set { _EffectiveDate = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            MergedUserCodeMethod(repo.ApplicationUnderTest.SpanTagSelectInfo, repo.ApplicationUnderTest.SearchInfo, repo.ApplicationUnderTest.TxtClassCodes1Info, repo.ApplicationUnderTest.Txt_Select_Class_codeInfo, repo.ApplicationUnderTest.SpanTagSelect1Info, repo.ApplicationUnderTest.TxtClassCodesInfo, repo.ApplicationUnderTest.Txt_Select_Class_code1Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(1));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BtnContinue1' at Center.", repo.ApplicationUnderTest.BtnContinue1Info, new RecordItemIndex(2));
            repo.ApplicationUnderTest.BtnContinue1.Click();
            Delay.Milliseconds(0);
            
            MergedUserCodeMethod2(repo.ApplicationUnderTest.CLOSEInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$UW_BusinessInsname' on item 'ApplicationUnderTest.TxtBussInsuredName'.", repo.ApplicationUnderTest.TxtBussInsuredNameInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.TxtBussInsuredName.Element.SetAttributeValue("Value", UW_BusinessInsname);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DrpLegalEntity' at Center.", repo.ApplicationUnderTest.DrpLegalEntityInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.DrpLegalEntity.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$UW_legalEntity' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.Search.EnsureVisible();
            Keyboard.Press(UW_legalEntity);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.Search.EnsureVisible();
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$UW_DBAName' on item 'ApplicationUnderTest.TxtDBAName'.", repo.ApplicationUnderTest.TxtDBANameInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.TxtDBAName.Element.SetAttributeValue("Value", UW_DBAName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$UW_Address1' on item 'ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.TxtAddress1'.", repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.TxtAddress1Info, new RecordItemIndex(9));
            repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.TxtAddress1.Element.SetAttributeValue("Value", UW_Address1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$UW_Address2' on item 'ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.TxtAddress2'.", repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.TxtAddress2Info, new RecordItemIndex(10));
            repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.TxtAddress2.Element.SetAttributeValue("Value", UW_Address2);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$UW_City' on item 'ApplicationUnderTest.TxtCity'.", repo.ApplicationUnderTest.TxtCityInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.TxtCity.Element.SetAttributeValue("Value", UW_City);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$UW_Zipcode' on item 'ApplicationUnderTest.TxtZipCode'.", repo.ApplicationUnderTest.TxtZipCodeInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.TxtZipCode.Element.SetAttributeValue("Value", UW_Zipcode);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$UW_BusinessStartDate' on item 'ApplicationUnderTest.TxtDateBussinessStart'.", repo.ApplicationUnderTest.TxtDateBussinessStartInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.TxtDateBussinessStart.Element.SetAttributeValue("Value", UW_BusinessStartDate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.Empliabilitylimit' at Center.", repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.EmpliabilitylimitInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.Empliabilitylimit.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Search' at Center.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.Search.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EmpliabilityValue' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.Search.PressKeys(EmpliabilityValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.Search.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Labelcheckbox4' at Center.", repo.ApplicationUnderTest.Labelcheckbox4Info, new RecordItemIndex(18));
            repo.ApplicationUnderTest.Labelcheckbox4.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtEffectiveDate' at Center.", repo.ApplicationUnderTest.TxtEffectiveDateInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.TxtEffectiveDate.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '(null)' on item 'ApplicationUnderTest.TxtEffectiveDate'.", repo.ApplicationUnderTest.TxtEffectiveDateInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.TxtEffectiveDate.Element.SetAttributeValue("Value", null);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EffectiveDate' with focus on 'ApplicationUnderTest.TxtEffectiveDate'.", repo.ApplicationUnderTest.TxtEffectiveDateInfo, new RecordItemIndex(21));
            repo.ApplicationUnderTest.TxtEffectiveDate.PressKeys(EffectiveDate);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'ApplicationUnderTest.TxtDescriptionOfOprations' at Center.", repo.ApplicationUnderTest.TxtDescriptionOfOprationsInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.TxtDescriptionOfOprations.DoubleClick();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.LabelTagYes1'.", repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.LabelTagYes1Info, new RecordItemIndex(23));
            //repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.LabelTagYes1.PerformClick();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtExpMod' at Center.", repo.ApplicationUnderTest.TxtExpModInfo, new RecordItemIndex(24));
            //repo.ApplicationUnderTest.TxtExpMod.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$UW_ExpMod' with focus on 'ApplicationUnderTest.TxtExpMod'.", repo.ApplicationUnderTest.TxtExpModInfo, new RecordItemIndex(25));
            //repo.ApplicationUnderTest.TxtExpMod.PressKeys(UW_ExpMod);
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$UW_FirstName' on item 'ApplicationUnderTest.TxtFirstName1'.", repo.ApplicationUnderTest.TxtFirstName1Info, new RecordItemIndex(26));
            repo.ApplicationUnderTest.TxtFirstName1.Element.SetAttributeValue("Value", UW_FirstName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$UW_LastName' on item 'ApplicationUnderTest.TxtLastName1'.", repo.ApplicationUnderTest.TxtLastName1Info, new RecordItemIndex(27));
            repo.ApplicationUnderTest.TxtLastName1.Element.SetAttributeValue("Value", UW_LastName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$UW_OwnerPercent' on item 'ApplicationUnderTest.TxtPerOwner1'.", repo.ApplicationUnderTest.TxtPerOwner1Info, new RecordItemIndex(28));
            repo.ApplicationUnderTest.TxtPerOwner1.Element.SetAttributeValue("Value", UW_OwnerPercent);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.OwnerStateSelection' at Center.", repo.ApplicationUnderTest.OwnerStateSelectionInfo, new RecordItemIndex(29));
            repo.ApplicationUnderTest.OwnerStateSelection.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$UW_Ownerstate' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(30));
            repo.ApplicationUnderTest.Search.PressKeys(UW_Ownerstate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(31));
            repo.ApplicationUnderTest.Search.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LabletxtRadioExclude' at Center.", repo.ApplicationUnderTest.LabletxtRadioExcludeInfo, new RecordItemIndex(32));
            //repo.ApplicationUnderTest.LabletxtRadioExclude.Click();
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$UW_Descriptions' on item 'ApplicationUnderTest.TxtDescriptionOfOprations'.", repo.ApplicationUnderTest.TxtDescriptionOfOprationsInfo, new RecordItemIndex(33));
            repo.ApplicationUnderTest.TxtDescriptionOfOprations.Element.SetAttributeValue("Value", UW_Descriptions);
            Delay.Milliseconds(0);
            
            MergedUserCodeMethod1(repo.ApplicationUnderTest.TxtFTEmployee1Info, repo.ApplicationUnderTest.TxtPTEmployee1Info, repo.ApplicationUnderTest.TxtGrossannualPayroll1Info, repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.Click_TableInfo, repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.TxtFTEmployee2Info, repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.TxtPTEmployee2Info, repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.TxtGrossannualPayroll2Info);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BtnNext' at Center.", repo.ApplicationUnderTest.BtnNextInfo, new RecordItemIndex(35));
            //repo.ApplicationUnderTest.BtnNext.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 30s.", new RecordItemIndex(36));
            //Delay.Duration(30000, false);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.WCNavigation1' at 10;10.", repo.ApplicationUnderTest.WCNavigation1Info, new RecordItemIndex(37));
            //repo.ApplicationUnderTest.WCNavigation1.Click("10;10");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 30s.", new RecordItemIndex(38));
            //Delay.Duration(30000, false);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtInsuredSubcontract' at Center.", repo.ApplicationUnderTest.TxtInsuredSubcontractInfo, new RecordItemIndex(39));
            //repo.ApplicationUnderTest.TxtInsuredSubcontract.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}' with focus on 'ApplicationUnderTest.TxtInsuredSubcontract'.", repo.ApplicationUnderTest.TxtInsuredSubcontractInfo, new RecordItemIndex(40));
            //repo.ApplicationUnderTest.TxtInsuredSubcontract.PressKeys("{Back}");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$UW_InsSubcontractorAmt' with focus on 'ApplicationUnderTest.TxtInsuredSubcontract'.", repo.ApplicationUnderTest.TxtInsuredSubcontractInfo, new RecordItemIndex(41));
            //repo.ApplicationUnderTest.TxtInsuredSubcontract.PressKeys(UW_InsSubcontractorAmt);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxttypeofworkSubcontract' at Center.", repo.ApplicationUnderTest.TxttypeofworkSubcontractInfo, new RecordItemIndex(42));
            //repo.ApplicationUnderTest.TxttypeofworkSubcontract.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'YES' with focus on 'ApplicationUnderTest.TxttypeofworkSubcontract'.", repo.ApplicationUnderTest.TxttypeofworkSubcontractInfo, new RecordItemIndex(43));
            //repo.ApplicationUnderTest.TxttypeofworkSubcontract.PressKeys("YES");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.LabelTagYes' at Center.", repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.LabelTagYesInfo, new RecordItemIndex(44));
            //repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.LabelTagYes.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.LabelTagYes2' at Center.", repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.LabelTagYes2Info, new RecordItemIndex(45));
            //repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.LabelTagYes2.Click();
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'ApplicationUnderTest.BtnNext'.", repo.ApplicationUnderTest.BtnNextInfo, new RecordItemIndex(46));
            repo.ApplicationUnderTest.BtnNext.PerformClick();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'ApplicationUnderTest.MainContentHolder.UseAsIs'.", repo.ApplicationUnderTest.MainContentHolder.UseAsIsInfo, new RecordItemIndex(47));
            //repo.ApplicationUnderTest.MainContentHolder.UseAsIs.PerformClick();
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 15s.", new RecordItemIndex(48));
            Delay.Duration(15000, false);
            
            // HI
            //Report.Log(ReportLevel.Info, "Section", "HI", new RecordItemIndex(49));
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtAddinsuredName1' at 252;25.", repo.ApplicationUnderTest.TxtAddinsuredName1Info, new RecordItemIndex(50));
            //repo.ApplicationUnderTest.TxtAddinsuredName1.Click("252;25");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$UW_AdditionalInsuredName' with focus on 'ApplicationUnderTest.TxtAddinsuredName1'.", repo.ApplicationUnderTest.TxtAddinsuredName1Info, new RecordItemIndex(51));
            //repo.ApplicationUnderTest.TxtAddinsuredName1.PressKeys(UW_AdditionalInsuredName);
            //Delay.Milliseconds(20);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.TxtFEINNo1' at 136;15.", repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.TxtFEINNo1Info, new RecordItemIndex(52));
            //repo.ApplicationUnderTest.BgGreyBorderBorderBottomBorderWhi.TxtFEINNo1.Click("136;15");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$UW_AdditionalInsuredFEINNo' with focus on 'ApplicationUnderTest.Seach_Link'.", repo.ApplicationUnderTest.Seach_LinkInfo, new RecordItemIndex(53));
            //repo.ApplicationUnderTest.Seach_Link.EnsureVisible();
            //Keyboard.Press(UW_AdditionalInsuredFEINNo);
            //Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
