///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sid_FCGAProject.User_Collection
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Latest_Excel_Write recording.
    /// </summary>
    [TestModule("bf5d3fb0-e6f5-46d4-ac8e-bcec88814d52", ModuleType.Recording, 1)]
    public partial class Latest_Excel_Write : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repository.
        /// </summary>
        public static global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repo = global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository.Instance;

        static Latest_Excel_Write instance = new Latest_Excel_Write();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Latest_Excel_Write()
        {
            TCID = "";
            Product = "";
            TestScenario = "";
            ClassCode = "";
            ClassDescription = "";
            ClassGroup = "NA";
            InsuredName = "";
            ReferralReason = "";
            InsuredAddress = "";
            PrdPremium = "";
            CarrierName = "";
            MIPolicyNo = "";
            XSPolicyNo = "NA";
            StartTime = "";
            EndTime = "";
            StatusReason = "Need to Analyse";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Latest_Excel_Write Instance
        {
            get { return instance; }
        }

#region Variables

        string _TCID;

        /// <summary>
        /// Gets or sets the value of variable TCID.
        /// </summary>
        [TestVariable("479ef075-1b98-4b40-a085-3fa1e54c1e2f")]
        public string TCID
        {
            get { return _TCID; }
            set { _TCID = value; }
        }

        string _Product;

        /// <summary>
        /// Gets or sets the value of variable Product.
        /// </summary>
        [TestVariable("548806e9-b4d6-4e3f-af46-f2ac69a08c94")]
        public string Product
        {
            get { return _Product; }
            set { _Product = value; }
        }

        string _TestScenario;

        /// <summary>
        /// Gets or sets the value of variable TestScenario.
        /// </summary>
        [TestVariable("cecde0fc-d4d0-4bc1-9461-5b148a273776")]
        public string TestScenario
        {
            get { return _TestScenario; }
            set { _TestScenario = value; }
        }

        string _ClassCode;

        /// <summary>
        /// Gets or sets the value of variable ClassCode.
        /// </summary>
        [TestVariable("36e447c8-7dcd-4072-96c6-ceaf3b839874")]
        public string ClassCode
        {
            get { return _ClassCode; }
            set { _ClassCode = value; }
        }

        string _ClassDescription;

        /// <summary>
        /// Gets or sets the value of variable ClassDescription.
        /// </summary>
        [TestVariable("b90f9a18-2617-46df-8236-9e4848411e5d")]
        public string ClassDescription
        {
            get { return _ClassDescription; }
            set { _ClassDescription = value; }
        }

        string _ClassGroup;

        /// <summary>
        /// Gets or sets the value of variable ClassGroup.
        /// </summary>
        [TestVariable("abd70289-0d19-4449-a7a3-d0f57db44589")]
        public string ClassGroup
        {
            get { return _ClassGroup; }
            set { _ClassGroup = value; }
        }

        string _InsuredName;

        /// <summary>
        /// Gets or sets the value of variable InsuredName.
        /// </summary>
        [TestVariable("99a395da-1990-4f57-a576-954b310cde8c")]
        public string InsuredName
        {
            get { return _InsuredName; }
            set { _InsuredName = value; }
        }

        string _ReferralReason;

        /// <summary>
        /// Gets or sets the value of variable ReferralReason.
        /// </summary>
        [TestVariable("97e5bfd5-49c0-4147-918d-674746b70ea5")]
        public string ReferralReason
        {
            get { return _ReferralReason; }
            set { _ReferralReason = value; }
        }

        string _InsuredAddress;

        /// <summary>
        /// Gets or sets the value of variable InsuredAddress.
        /// </summary>
        [TestVariable("6b7b0699-fa4b-4648-8cbc-708ec82283d6")]
        public string InsuredAddress
        {
            get { return _InsuredAddress; }
            set { _InsuredAddress = value; }
        }

        string _PrdPremium;

        /// <summary>
        /// Gets or sets the value of variable PrdPremium.
        /// </summary>
        [TestVariable("0e8e039a-6168-46b9-a110-4f6b5005647b")]
        public string PrdPremium
        {
            get { return _PrdPremium; }
            set { _PrdPremium = value; }
        }

        string _CarrierName;

        /// <summary>
        /// Gets or sets the value of variable CarrierName.
        /// </summary>
        [TestVariable("4698a0f9-a61f-4b6e-b594-ded5ded3a184")]
        public string CarrierName
        {
            get { return _CarrierName; }
            set { _CarrierName = value; }
        }

        string _MIPolicyNo;

        /// <summary>
        /// Gets or sets the value of variable MIPolicyNo.
        /// </summary>
        [TestVariable("a0460a5d-6a1f-4f15-9ca0-34433075bfe9")]
        public string MIPolicyNo
        {
            get { return _MIPolicyNo; }
            set { _MIPolicyNo = value; }
        }

        string _XSPolicyNo;

        /// <summary>
        /// Gets or sets the value of variable XSPolicyNo.
        /// </summary>
        [TestVariable("c30e8b90-4108-4535-a406-6ba2a55fd2f3")]
        public string XSPolicyNo
        {
            get { return _XSPolicyNo; }
            set { _XSPolicyNo = value; }
        }

        string _StartTime;

        /// <summary>
        /// Gets or sets the value of variable StartTime.
        /// </summary>
        [TestVariable("5dd8a2f6-73b6-43c8-b522-a173ccd9d966")]
        public string StartTime
        {
            get { return _StartTime; }
            set { _StartTime = value; }
        }

        string _EndTime;

        /// <summary>
        /// Gets or sets the value of variable EndTime.
        /// </summary>
        [TestVariable("7bcece8c-9cb5-4f2f-a26d-e437e47e4eae")]
        public string EndTime
        {
            get { return _EndTime; }
            set { _EndTime = value; }
        }

        string _StatusReason;

        /// <summary>
        /// Gets or sets the value of variable StatusReason.
        /// </summary>
        [TestVariable("b930431f-322b-42a5-a003-6be381a9436f")]
        public string StatusReason
        {
            get { return _StatusReason; }
            set { _StatusReason = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            //TestExcelWrite(TCID, Product, TestScenario, ClassCode, ClassDescription, ClassGroup, InsuredName, ReferralReason, InsuredAddress, PrdPremium, CarrierName, MIPolicyNo, XSPolicyNo, StatusReason, StartTime, EndTime);
            //Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
