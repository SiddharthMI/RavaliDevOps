///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sid_FCGAProject.WC_Product
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Applicationpage recording.
    /// </summary>
    [TestModule("e4030092-9dad-435f-bba6-424493bb713a", ModuleType.Recording, 1)]
    public partial class Applicationpage : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repository.
        /// </summary>
        public static global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repo = global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository.Instance;

        static Applicationpage instance = new Applicationpage();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Applicationpage()
        {
            OwnerNameInsured = "S M";
            Relationshipdetails = "Primary";
            Add_FTEmp = "5";
            Add_PTEmp = "2";
            App_Address1 = "Address1";
            App_Address2 = "Address2";
            App_City = "Tampa";
            App_State = "FL";
            App_ZipCode = "33604";
            App_ContactName = "Sid";
            App_Phone_Num = "9163486307";
            App_EmailID = "Sid@gmail.com";
            App_AddressSelection = "Tampa";
            FileUploadDesc = "FDe";
            UploadPath = "C:\\Users\\JuilyK\\Downloads\\Download_WCWorksheet_QWS_Q-214455_18676_WC_INPROGRESS06222021_04300544_PM";
            AddAditionalInsured = "";
            Status_Reason = "Application Page";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Applicationpage Instance
        {
            get { return instance; }
        }

#region Variables

        string _OwnerNameInsured;

        /// <summary>
        /// Gets or sets the value of variable OwnerNameInsured.
        /// </summary>
        [TestVariable("47fdcc26-1cb6-4877-b876-1e56019cc499")]
        public string OwnerNameInsured
        {
            get { return _OwnerNameInsured; }
            set { _OwnerNameInsured = value; }
        }

        string _Relationshipdetails;

        /// <summary>
        /// Gets or sets the value of variable Relationshipdetails.
        /// </summary>
        [TestVariable("32c2af12-ef8f-4d75-ae18-404720b8db6a")]
        public string Relationshipdetails
        {
            get { return _Relationshipdetails; }
            set { _Relationshipdetails = value; }
        }

        string _Add_FTEmp;

        /// <summary>
        /// Gets or sets the value of variable Add_FTEmp.
        /// </summary>
        [TestVariable("6aabe0eb-9845-4730-8a02-d08206f704d2")]
        public string Add_FTEmp
        {
            get { return _Add_FTEmp; }
            set { _Add_FTEmp = value; }
        }

        string _Add_PTEmp;

        /// <summary>
        /// Gets or sets the value of variable Add_PTEmp.
        /// </summary>
        [TestVariable("3c305dbf-68ba-419a-82da-1225edc98372")]
        public string Add_PTEmp
        {
            get { return _Add_PTEmp; }
            set { _Add_PTEmp = value; }
        }

        string _App_Address1;

        /// <summary>
        /// Gets or sets the value of variable App_Address1.
        /// </summary>
        [TestVariable("1dcd3d94-0cae-43bf-bc31-8dc677ebedd0")]
        public string App_Address1
        {
            get { return _App_Address1; }
            set { _App_Address1 = value; }
        }

        string _App_Address2;

        /// <summary>
        /// Gets or sets the value of variable App_Address2.
        /// </summary>
        [TestVariable("6e29e60b-887c-4641-acd5-9cc7e370ec68")]
        public string App_Address2
        {
            get { return _App_Address2; }
            set { _App_Address2 = value; }
        }

        string _App_City;

        /// <summary>
        /// Gets or sets the value of variable App_City.
        /// </summary>
        [TestVariable("48818981-8571-4c1d-9f84-d3fe0d4a8e10")]
        public string App_City
        {
            get { return _App_City; }
            set { _App_City = value; }
        }

        string _App_State;

        /// <summary>
        /// Gets or sets the value of variable App_State.
        /// </summary>
        [TestVariable("f23467a4-65de-4a29-bcdd-574944a4d75f")]
        public string App_State
        {
            get { return _App_State; }
            set { _App_State = value; }
        }

        string _App_ZipCode;

        /// <summary>
        /// Gets or sets the value of variable App_ZipCode.
        /// </summary>
        [TestVariable("4ad134b1-2f8b-4642-b9eb-9a2759921a8c")]
        public string App_ZipCode
        {
            get { return _App_ZipCode; }
            set { _App_ZipCode = value; }
        }

        string _App_ContactName;

        /// <summary>
        /// Gets or sets the value of variable App_ContactName.
        /// </summary>
        [TestVariable("d57fd173-8197-4f17-9221-e79c30fcc314")]
        public string App_ContactName
        {
            get { return _App_ContactName; }
            set { _App_ContactName = value; }
        }

        string _App_Phone_Num;

        /// <summary>
        /// Gets or sets the value of variable App_Phone_Num.
        /// </summary>
        [TestVariable("a5fdbb81-abc3-478e-917e-34927c971d90")]
        public string App_Phone_Num
        {
            get { return _App_Phone_Num; }
            set { _App_Phone_Num = value; }
        }

        string _App_EmailID;

        /// <summary>
        /// Gets or sets the value of variable App_EmailID.
        /// </summary>
        [TestVariable("0c0dbae0-81a2-4ad2-9133-ba3966978271")]
        public string App_EmailID
        {
            get { return _App_EmailID; }
            set { _App_EmailID = value; }
        }

        string _App_AddressSelection;

        /// <summary>
        /// Gets or sets the value of variable App_AddressSelection.
        /// </summary>
        [TestVariable("065e585e-e72c-428a-88d9-31df6f1191ef")]
        public string App_AddressSelection
        {
            get { return _App_AddressSelection; }
            set { _App_AddressSelection = value; }
        }

        string _FileUploadDesc;

        /// <summary>
        /// Gets or sets the value of variable FileUploadDesc.
        /// </summary>
        [TestVariable("e7bd6c92-a382-438a-bc76-b76ae1734316")]
        public string FileUploadDesc
        {
            get { return _FileUploadDesc; }
            set { _FileUploadDesc = value; }
        }

        string _UploadPath;

        /// <summary>
        /// Gets or sets the value of variable UploadPath.
        /// </summary>
        [TestVariable("7593946d-c45a-4030-8d16-9346e9b30a04")]
        public string UploadPath
        {
            get { return _UploadPath; }
            set { _UploadPath = value; }
        }

        string _AddAditionalInsured;

        /// <summary>
        /// Gets or sets the value of variable AddAditionalInsured.
        /// </summary>
        [TestVariable("2a7aed4f-c8d7-42eb-ab81-05ba31dfafa3")]
        public string AddAditionalInsured
        {
            get { return _AddAditionalInsured; }
            set { _AddAditionalInsured = value; }
        }

        string _Status_Reason;

        /// <summary>
        /// Gets or sets the value of variable Status_Reason.
        /// </summary>
        [TestVariable("8ab91f7a-174f-45a2-8049-b378866f436d")]
        public string Status_Reason
        {
            get { return _Status_Reason; }
            set { _Status_Reason = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SelectInsuredName' at Center.", repo.ApplicationUnderTest.SelectInsuredNameInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.SelectInsuredName.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Search' at Center.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.Search.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OwnerNameInsured' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.Search.PressKeys(OwnerNameInsured);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.Search.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SelectlRelationship' at Center.", repo.ApplicationUnderTest.SelectlRelationshipInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.SelectlRelationship.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Search' at Center.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.Search.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Relationshipdetails' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.Search.PressKeys(Relationshipdetails);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.Search.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtLocationFTEE' at Center.", repo.ApplicationUnderTest.TxtLocationFTEEInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.TxtLocationFTEE.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Add_FTEmp' with focus on 'ApplicationUnderTest.TxtLocationFTEE'.", repo.ApplicationUnderTest.TxtLocationFTEEInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.TxtLocationFTEE.PressKeys(Add_FTEmp);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtLocationPTEE' at Center.", repo.ApplicationUnderTest.TxtLocationPTEEInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.TxtLocationPTEE.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Add_PTEmp' with focus on 'ApplicationUnderTest.TxtLocationPTEE'.", repo.ApplicationUnderTest.TxtLocationPTEEInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.TxtLocationPTEE.PressKeys(Add_PTEmp);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmApplication.TxtLocationAddress1' at Center.", repo.FrmApplication.TxtLocationAddress1Info, new RecordItemIndex(12));
            repo.FrmApplication.TxtLocationAddress1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$App_Address1' with focus on 'FrmApplication.TxtLocationAddress1'.", repo.FrmApplication.TxtLocationAddress1Info, new RecordItemIndex(13));
            repo.FrmApplication.TxtLocationAddress1.PressKeys(App_Address1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmApplication.Text' at Center.", repo.FrmApplication.TextInfo, new RecordItemIndex(14));
            repo.FrmApplication.Text.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$App_Address2' with focus on 'ApplicationUnderTest'.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.Self.EnsureVisible();
            Keyboard.Press(App_Address2);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest' at Center.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.Self.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtLocationCity' at Center.", repo.ApplicationUnderTest.TxtLocationCityInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.TxtLocationCity.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'ApplicationUnderTest.TxtLocationCity' at Center.", repo.ApplicationUnderTest.TxtLocationCityInfo, new RecordItemIndex(18));
            repo.ApplicationUnderTest.TxtLocationCity.DoubleClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$App_City' with focus on 'ApplicationUnderTest.TxtLocationCity'.", repo.ApplicationUnderTest.TxtLocationCityInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.TxtLocationCity.PressKeys(App_City);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SelectLocationState' at Center.", repo.ApplicationUnderTest.SelectLocationStateInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.SelectLocationState.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$App_State' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(21));
            repo.ApplicationUnderTest.Search.EnsureVisible();
            Keyboard.Press(App_State);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.Search.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtLocationZip' at Center.", repo.ApplicationUnderTest.TxtLocationZipInfo, new RecordItemIndex(23));
            repo.ApplicationUnderTest.TxtLocationZip.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$App_ZipCode' with focus on 'ApplicationUnderTest.TxtLocationZip'.", repo.ApplicationUnderTest.TxtLocationZipInfo, new RecordItemIndex(24));
            repo.ApplicationUnderTest.TxtLocationZip.PressKeys(App_ZipCode);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BtnAddLocation' at Center.", repo.ApplicationUnderTest.BtnAddLocationInfo, new RecordItemIndex(25));
            repo.ApplicationUnderTest.BtnAddLocation.Click();
            Delay.Milliseconds(0);
            
            MergedUserCodeMethod(repo.ApplicationUnderTest.SelectInsuredNameInfo, repo.ApplicationUnderTest.SearchInfo, repo.ApplicationUnderTest.SelectlRelationshipInfo, repo.ApplicationUnderTest.TxtLocationFTEEInfo, repo.ApplicationUnderTest.TxtLocationPTEEInfo, repo.FrmApplication.TxtLocationAddress1Info, repo.FrmApplication.TextInfo, repo.ApplicationUnderTest.SelfInfo, repo.ApplicationUnderTest.TxtLocationCityInfo, repo.ApplicationUnderTest.SelectLocationStateInfo, repo.ApplicationUnderTest.TxtLocationZipInfo, repo.ApplicationUnderTest.BtnAddLocationInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtMainInsuredContactName' at Center.", repo.ApplicationUnderTest.TxtMainInsuredContactNameInfo, new RecordItemIndex(27));
            repo.ApplicationUnderTest.TxtMainInsuredContactName.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$App_ContactName' with focus on 'ApplicationUnderTest.TxtMainInsuredContactName'.", repo.ApplicationUnderTest.TxtMainInsuredContactNameInfo, new RecordItemIndex(28));
            repo.ApplicationUnderTest.TxtMainInsuredContactName.PressKeys(App_ContactName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtMainInsuredPhone' at Center.", repo.ApplicationUnderTest.TxtMainInsuredPhoneInfo, new RecordItemIndex(29));
            repo.ApplicationUnderTest.TxtMainInsuredPhone.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$App_Phone_Num' with focus on 'ApplicationUnderTest.TxtMainInsuredPhone'.", repo.ApplicationUnderTest.TxtMainInsuredPhoneInfo, new RecordItemIndex(30));
            repo.ApplicationUnderTest.TxtMainInsuredPhone.PressKeys(App_Phone_Num);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtMainInsuredEmail' at Center.", repo.ApplicationUnderTest.TxtMainInsuredEmailInfo, new RecordItemIndex(31));
            repo.ApplicationUnderTest.TxtMainInsuredEmail.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtMainInsuredEmail' at Center.", repo.ApplicationUnderTest.TxtMainInsuredEmailInfo, new RecordItemIndex(32));
            repo.ApplicationUnderTest.TxtMainInsuredEmail.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$App_EmailID' with focus on 'ApplicationUnderTest.TxtMainInsuredEmail'.", repo.ApplicationUnderTest.TxtMainInsuredEmailInfo, new RecordItemIndex(33));
            repo.ApplicationUnderTest.TxtMainInsuredEmail.PressKeys(App_EmailID);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmApplication.SpanTagSelect' at Center.", repo.FrmApplication.SpanTagSelectInfo, new RecordItemIndex(34));
            repo.FrmApplication.SpanTagSelect.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Search' at 61;18.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(35));
            repo.ApplicationUnderTest.Search.Click("61;18");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$App_AddressSelection' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(36));
            repo.ApplicationUnderTest.Search.PressKeys(App_AddressSelection);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.Search'.", repo.ApplicationUnderTest.SearchInfo, new RecordItemIndex(37));
            repo.ApplicationUnderTest.Search.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtFileDesc' at Center.", repo.ApplicationUnderTest.TxtFileDescInfo, new RecordItemIndex(38));
            //repo.ApplicationUnderTest.TxtFileDesc.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FileUploadDesc' with focus on 'ApplicationUnderTest.TxtFileDesc'.", repo.ApplicationUnderTest.TxtFileDescInfo, new RecordItemIndex(39));
            //repo.ApplicationUnderTest.TxtFileDesc.PressKeys(FileUploadDesc);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.UploadFile' at Center.", repo.ApplicationUnderTest.UploadFileInfo, new RecordItemIndex(40));
            //repo.ApplicationUnderTest.UploadFile.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Open.Text1148' at Center.", repo.Open.Text1148Info, new RecordItemIndex(41));
            //repo.Open.Text1148.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '$UploadPath' on item 'Open.Text1148'.", repo.Open.Text1148Info, new RecordItemIndex(42));
            //repo.Open.Text1148.Element.SetAttributeValue("Text", UploadPath);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Open.ButtonOpen' at Center.", repo.Open.ButtonOpenInfo, new RecordItemIndex(43));
            //repo.Open.ButtonOpen.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(44));
            //Delay.Duration(5000, false);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BtnUpload' at Center.", repo.ApplicationUnderTest.BtnUploadInfo, new RecordItemIndex(45));
            //repo.ApplicationUnderTest.BtnUpload.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(46));
            //Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmApplication.IAgree' at Center.", repo.FrmApplication.IAgreeInfo, new RecordItemIndex(47));
            repo.FrmApplication.IAgree.Click();
            Delay.Milliseconds(0);
            
            Ranorex.AutomationHelpers.UserCodeCollections.WebLibrary.ReportFullPageScreenshot(repo.ApplicationUnderTest.SelfInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BtnSave' at Center.", repo.ApplicationUnderTest.BtnSaveInfo, new RecordItemIndex(49));
            repo.ApplicationUnderTest.BtnSave.Click();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(50));
            //Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 15s to exist. Associated repository item: 'ApplicationUnderTest.BtnBackRef'", repo.ApplicationUnderTest.BtnBackRefInfo, new ActionTimeout(15000), new RecordItemIndex(51));
            repo.ApplicationUnderTest.BtnBackRefInfo.WaitForExists(15000);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(52));
            Delay.Duration(5000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
