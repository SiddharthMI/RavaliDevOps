///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sid_FCGAProject.WC_Product
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AgentOwnerSelection recording.
    /// </summary>
    [TestModule("94bcb985-4dd6-4a65-b7ac-a1a165552c78", ModuleType.Recording, 1)]
    public partial class AgentOwnerSelection : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repository.
        /// </summary>
        public static global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repo = global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository.Instance;

        static AgentOwnerSelection instance = new AgentOwnerSelection();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AgentOwnerSelection()
        {
            OwnerFirstName = "S";
            OwnerLastName = "M";
            OwnerPercent = "100";
            StatusReason = "Owner Selection";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AgentOwnerSelection Instance
        {
            get { return instance; }
        }

#region Variables

        string _OwnerFirstName;

        /// <summary>
        /// Gets or sets the value of variable OwnerFirstName.
        /// </summary>
        [TestVariable("aac1dcf2-22c6-4872-ac63-d09bb6f6c9b9")]
        public string OwnerFirstName
        {
            get { return _OwnerFirstName; }
            set { _OwnerFirstName = value; }
        }

        string _OwnerLastName;

        /// <summary>
        /// Gets or sets the value of variable OwnerLastName.
        /// </summary>
        [TestVariable("9b4e9706-ae12-4d74-b4e5-c74494404b64")]
        public string OwnerLastName
        {
            get { return _OwnerLastName; }
            set { _OwnerLastName = value; }
        }

        string _OwnerPercent;

        /// <summary>
        /// Gets or sets the value of variable OwnerPercent.
        /// </summary>
        [TestVariable("f0424452-30da-4ac3-af9e-d64d2798000a")]
        public string OwnerPercent
        {
            get { return _OwnerPercent; }
            set { _OwnerPercent = value; }
        }

        string _StatusReason;

        /// <summary>
        /// Gets or sets the value of variable StatusReason.
        /// </summary>
        [TestVariable("f7eb5162-7846-421b-8102-3e92d8798491")]
        public string StatusReason
        {
            get { return _StatusReason; }
            set { _StatusReason = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtFirstName1' at Center.", repo.ApplicationUnderTest.TxtFirstName1Info, new RecordItemIndex(0));
            repo.ApplicationUnderTest.TxtFirstName1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OwnerFirstName' with focus on 'ApplicationUnderTest.TxtFirstName1'.", repo.ApplicationUnderTest.TxtFirstName1Info, new RecordItemIndex(1));
            repo.ApplicationUnderTest.TxtFirstName1.PressKeys(OwnerFirstName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtLastName1' at Center.", repo.ApplicationUnderTest.TxtLastName1Info, new RecordItemIndex(2));
            repo.ApplicationUnderTest.TxtLastName1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OwnerLastName' with focus on 'ApplicationUnderTest.TxtLastName1'.", repo.ApplicationUnderTest.TxtLastName1Info, new RecordItemIndex(3));
            repo.ApplicationUnderTest.TxtLastName1.EnsureVisible();
            Keyboard.Press(OwnerLastName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtPerOwner1' at Center.", repo.ApplicationUnderTest.TxtPerOwner1Info, new RecordItemIndex(4));
            repo.ApplicationUnderTest.TxtPerOwner1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OwnerPercent' with focus on 'ApplicationUnderTest.TxtPerOwner1'.", repo.ApplicationUnderTest.TxtPerOwner1Info, new RecordItemIndex(5));
            repo.ApplicationUnderTest.TxtPerOwner1.PressKeys(OwnerPercent);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
